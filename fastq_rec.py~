from Bio import SeqIO
from scipy import pandas as pd

class fastq_pysickle:
    def __init__:
    

<<<<<<< HEAD
# this may not be needed       
#    def get_read(self):
#        '''load one read from the fastq file'''
#        self.seq
#        self.phred
#        self.phred_nums
=======
    def fastq(self, filename):
        '''load the fastq file and pass all the information with quality scores converted to Phred Values'''
		# hard coded to take in only illumina scores but can be extended to work with others
		for record in SeqIO.parse(filename, "fastq-illumina"):
			self.id = record.id
			self.seq = record.seq
			self.phred = record.letter_annotations["phred_quality"]
			calculate_trim_adresses(self)
			write_to_output(self)
>>>>>>> eea851315c25de7d6a2ba72fc6340cf9942e9319
    

#    def phred_id(self):
#        '''determine the encoding of the phred score, and populate the dictionary
#        guessing phred type may return AmbiguousPhredError'''

        
    def calculate_trim_adresses(self, threshold):
        '''return the addresses at the 5' and 3' ends at which to trim the sequence'''
        # input
        self.phred_nums
        # use the MA filter
        filtered_numeric_quality_score = filter_on_quality()
        
        # output
        self.5_addr
        self.3_addr
        
    def trim(self):
        '''use the calculated addresses to trim the fastq file'''
        
    
    
    
    
    
    
	
